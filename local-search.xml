<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Vscode之STM32环境搭建</title>
    <link href="/2022/08/09/015/"/>
    <url>/2022/08/09/015/</url>
    
    <content type="html"><![CDATA[<p>总所周知，Keil采用的是比较旧的编辑器，使用起来贼不方便，为何不采用宇宙第一编辑器呢</p><h2 id="使用思路"><a href="#使用思路" class="headerlink" title="使用思路"></a>使用思路</h2><p>除了在编辑方便使用<code>vscode</code>编辑器</p><p>编译、下载以及调试还是采用<code>Keil</code></p><h2 id="MinGW"><a href="#MinGW" class="headerlink" title="MinGW"></a>MinGW</h2><p><a href="https://sourceforge.net/projects/mingw/">下载地址</a></p><p>直接安装即可</p><h2 id="vscode-插件"><a href="#vscode-插件" class="headerlink" title="vscode 插件"></a>vscode 插件</h2><h3 id="Keil-Assistant插件"><a href="#Keil-Assistant插件" class="headerlink" title="Keil Assistant插件"></a>Keil Assistant插件</h3><p>直接安装即可，进需要配置<code>Uv4 Path</code>位置即可</p><h3 id="C-C-插件"><a href="#C-C-插件" class="headerlink" title="C/C++插件"></a>C/C++插件</h3><p>直接安装插件，加上简单地<code>MinGw</code>配置</p><p>例如</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># 1. Complier Path</span><br>C:\MinGW\bin\g++.exe<br><br><span class="hljs-comment"># 2. Include Path</span><br>C:\MinGW\lib\gcc\mingw32\6.3.0\include\c++<br></code></pre></div></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="若出现-未定义标识符"><a href="#若出现-未定义标识符" class="headerlink" title="若出现 未定义标识符"></a>若出现 未定义标识符</h3><p>一般来说出现的这个东西叫做 错误波形曲线（Error Squiggles）简单地说直接关闭就好</p><p>除了关闭还有一种方法</p><p>将 <code>C_Cpp: Intelli Sense Engine</code> 设置为 <code>Tag Parser</code></p><p>此番设置之后，绝对不会出现错误提示</p><p>但也暴露出一个很大的问题</p><p>就是一些简单的报错他不会提示</p><p>所以前往不要设置</p><h3 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h3><p>关于那些一开始的波浪线</p><p>直接根据鼠标移过去的快速修复，即添加对应的 <code>includePath</code> 即可完成问题</p><p>一些变量问题则需要添加对应的 <code>define</code></p>]]></content>
    
    
    <categories>
      
      <category>在vscode搭建STM32环境</category>
      
    </categories>
    
    
    <tags>
      
      <tag>STM32</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac环境下PHP继承环境MAMP的部署</title>
    <link href="/2022/03/09/014/"/>
    <url>/2022/03/09/014/</url>
    
    <content type="html"><![CDATA[<h2 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h2><p><a href="https://macwk.com/soft/mamp-pro">Mamp-macwk</a></p><p>下载安装后，会出现两个</p><h2 id="关于使用"><a href="#关于使用" class="headerlink" title="关于使用"></a>关于使用</h2><p>使用并不是重点，看着用就可以了</p><p><a href="https://www.cnblogs.com/niuben/p/14244260.html">使用参考</a></p><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>主要的目的是，关闭系统自带的 <code>PHP</code>、<code>Apache</code>环境，使用<code>Mamp pro</code>的环境</p><p>关闭系统自带Apache</p><h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><p>未完待续…</p>]]></content>
    
    
    <categories>
      
      <category>杂记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux之Curl</title>
    <link href="/2022/01/21/013/"/>
    <url>/2022/01/21/013/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>需要适量掌握点shell常识</p><ol><li><code>=</code>左右两边是没有空格的</li><li>单引号中特殊字符为纯文本，双引号则保持原有特性</li><li>『`命令`』或 『$(命令)』用于包裹整个命令</li><li>若该变量需要在其他子程序运行，则需要以 <code>export</code> 来使变量变成环境变量</li><li>取消变量的方法为使用 <code>unset</code></li></ol><h2 id="Curl"><a href="#Curl" class="headerlink" title="Curl"></a>Curl</h2><p>一个简单的GET请求</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">curl https://www.mobenw.cn/<br></code></pre></div></td></tr></table></figure><h3 id="相关参数"><a href="#相关参数" class="headerlink" title="相关参数"></a>相关参数</h3><figure class="highlight diff"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs diff"><span class="hljs-deletion">-H 请求头，设置一个请求头&quot;name: value&quot;格式</span><br><span class="hljs-deletion">-A UA头</span><br><span class="hljs-deletion">-d 请求体，键值对形式</span><br><span class="hljs-deletion">-F 表示上传文件 格式为：&quot;file=@FILE_PATH&quot;</span><br><span class="hljs-deletion">-k 跳过 SSL 检测</span><br><span class="hljs-deletion">-s 去掉控制台输出的请求信息</span><br><span class="hljs-deletion">-X 请求方式，常用的POST、GET</span><br></code></pre></div></td></tr></table></figure><h3 id="尝试"><a href="#尝试" class="headerlink" title="尝试"></a>尝试</h3><p>这里采用以前常用的图床 <a href="https://www.freebuf.com/">Freebuf</a></p><p>以前觉得香香的访问速度贼快，可是自从他加了防盗链之后就不适合做图床了</p><p>简单的测试</p><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh">curl -X POST <span class="hljs-string">&#x27;https://www.freebuf.com/buf/plugins/ueditor/ueditor/php/imageUp.php&#x27;</span>-F <span class="hljs-string">&#x27;upfile=@&quot;./img.jpg&quot;&#x27;</span><br></code></pre></div></td></tr></table></figure><p>接口返回的内容为</p><figure class="highlight json"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span>&#x27;url&#x27;<span class="hljs-punctuation">:</span>&#x27;images/<span class="hljs-number">20220121</span>/<span class="hljs-number">16427621503296.</span>jpg!small&#x27;<span class="hljs-punctuation">,</span>&#x27;title&#x27;<span class="hljs-punctuation">:</span>&#x27;&#x27;<span class="hljs-punctuation">,</span>&#x27;original&#x27;<span class="hljs-punctuation">:</span>&#x27;<span class="hljs-number">15563722119316.</span>jpg&#x27;<span class="hljs-punctuation">,</span>&#x27;state&#x27;<span class="hljs-punctuation">:</span>&#x27;SUCCESS&#x27;<span class="hljs-punctuation">&#125;</span><br></code></pre></div></td></tr></table></figure><p>返回的是一个json格式，Typroa所需要的是一个图片的链接(String)</p><p>于是乎需要对响应体进行json处理</p><p>虽说 <code>awk</code> <code>sed</code>能够处理，但编写起来还是不方便，不如直接使用第三方库</p><p><a href="https://www.tomczhen.com/2017/10/15/parsing-json-with-shell-script/">参考</a></p><p>使用python3处理数据</p><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh">curl -sX POST <span class="hljs-string">&#x27;https://www.freebuf.com/buf/plugins/ueditor/ueditor/php/imageUp.php&#x27;</span> -F <span class="hljs-string">&#x27;upfile=@&quot;./img.jpg&quot;&#x27;</span> | python3 -c <span class="hljs-string">&quot;import sys, json; print(&#x27;https://image.3001.net/&#x27;+json.loads(sys.stdin.readline().replace(&#x27;\&#x27;&#x27;,&#x27;\&quot;&#x27;))[&#x27;url&#x27;].split(&#x27;!&#x27;)[0])&quot;</span><br></code></pre></div></td></tr></table></figure><blockquote><p>由于返回值是非标准的json，需要将单引号转化为双引号，于是这里在python中进行了一系列处理</p></blockquote><p>功能上基本实现了，再根据<code>Typroa</code>的接口进行调整</p><p>接口采用的是 <code>『Command &lt;arg1&gt; &lt;arg2&gt;』</code></p><p>于是需要将命令写入到<code>.sh</code>文件中，并使图片路径以参数形式传入</p><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-keyword">for</span> path <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span>; <span class="hljs-keyword">do</span><br>    res=$(<br>        curl -sX POST <span class="hljs-string">&#x27;https://www.freebuf.com/buf/plugins/ueditor/ueditor/php/imageUp.php&#x27;</span> -F <span class="hljs-string">&#x27;upfile=@&quot;&#x27;</span><span class="hljs-variable">$path</span><span class="hljs-string">&#x27;&quot;&#x27;</span> |<br>            python3 -c <span class="hljs-string">&quot;import sys, json; print(&#x27;https://image.3001.net/&#x27;+json.loads(sys.stdin.readline().replace(&#x27;\&#x27;&#x27;,&#x27;\&quot;&#x27;))[&#x27;url&#x27;].split(&#x27;!&#x27;)[0])&quot;</span><br>    )<br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$res</span><br><span class="hljs-keyword">done</span><br><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>杂记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Shell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于Typroa的一些操作</title>
    <link href="/2021/12/30/012/"/>
    <url>/2021/12/30/012/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>自从<code>0.11.18</code>版本后就要开始收费了，毕竟是一个商用软件，但市面上来说还是有挺多Markown编辑器的，但不得不说，这个用起来还是挺舒服的。</p><p>解决办法也挺简单的退回<code>0.11.18</code>版本就好了。</p><p>如果真的好用的话，还是指的考虑补票一下的</p><p><a href="https://typora.io/windows/dev_release.html">Typroa-Windos-历史版本</a></p><p><a href="https://typora.io/dev_release.html">Typroa-Mac-历史版本</a></p><h2 id="关于图片上传"><a href="#关于图片上传" class="headerlink" title="关于图片上传"></a>关于图片上传</h2><p>计划是打算自己写个简单的脚本直接推送到图床的，可是想了想，有现成的轮子为啥不用呢，反正都是简单的<code>http</code>操作</p><p>于是便采用了相对轻量级一点了插件<code>picgo</code>,毕竟是只要你上传图片的时候才会跑这个<code>node</code></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh">npm install picgo -g<br></code></pre></div></td></tr></table></figure><h3 id="获取安装位置"><a href="#获取安装位置" class="headerlink" title="获取安装位置"></a>获取安装位置</h3><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh"><span class="hljs-built_in">which</span> node<br><span class="hljs-comment"># /opt/homebrew/bin/node</span><br><span class="hljs-built_in">which</span> picgo<br><span class="hljs-comment"># /opt/homebrew/bin/picgo</span><br><span class="hljs-comment"># 获取 node 和 picgo 的安装位置</span><br></code></pre></div></td></tr></table></figure><h3 id="配置上传命令"><a href="#配置上传命令" class="headerlink" title="配置上传命令"></a>配置上传命令</h3><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh">/opt/homebrew/bin/node /opt/homebrew/bin/picgo upload<br></code></pre></div></td></tr></table></figure><blockquote><p>需要使用node环境不然会报错（env: node: No such file or directory），如果给picgo配置了Path，那就简单多了</p></blockquote><p>在Tpyora中选择<code>Custom Command</code>作为<code>Image Uploader</code>功能</p><p><img src="https://worklink.oss-cn-hangzhou.aliyuncs.com/DDAE976F260280C92FD8CA9817224497.png" alt="image-20211230162052985"></p><blockquote><p>虽然说验证图片上传选项时会湖出现<code>Error: This image has been blocked, please contact webmaster for more information.</code>并不影响正常使用</p></blockquote><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>配置文件位置为 <code>~/.picgo/config.json</code></p><p><a href="https://picgo.github.io/PicGo-Core-Doc/zh/guide/config.html">官方文档</a></p><p>就官方来说没错，通常来说你只需要配置 <code>Uploader</code> 即可，所以你可以通过 <code>picgo set uploader</code> 来进入交互式命令行，配置成功后会自动生成配置文件，无需复制粘贴</p><p>但是的我现在用的是一个第三方图床，一个别人写好的阿里OSS</p><p>正当我兴高采烈的准备改改配置的时候，我看了看文档，我居然要自己写一个插件才能上传自己的图床，难受啊</p><p><img src="https://worklink.oss-cn-hangzhou.aliyuncs.com/4F69143B19C212C3EFFDB1E89AECB1CA.png" alt="image-20211230164455174"></p><p><del>于是乎便陷入了我有没有必要写插件的循环中</del></p><p>没有陷入，就是觉得没必要写了</p><h2 id="自定义图片上传脚本"><a href="#自定义图片上传脚本" class="headerlink" title="自定义图片上传脚本"></a>自定义图片上传脚本</h2><p>一开始打算采用Go语言进行编辑，但是呢毕竟是运行一个<code>Command</code>索性直接<code>Curl</code>命令快得多</p><p><a href="">Go实现的Typroa图片上传</a></p><p><a href="">Curl实现的Typroa图片上传</a></p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>有关于 <code>格式-图像-上传所有本地图片</code> 这个是针对当前文章中出现的图片进行上传</p>]]></content>
    
    
    <categories>
      
      <category>杂记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Mac</tag>
      
      <tag>配置与优化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Golang实现图片上传</title>
    <link href="/2021/12/30/011/"/>
    <url>/2021/12/30/011/</url>
    
    <content type="html"><![CDATA[<p>一个简单的go入门</p>]]></content>
    
    
    <categories>
      
      <category>杂记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Golang</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>有关于MAC环境下安装SQL Server的PHP扩展</title>
    <link href="/2021/12/26/010/"/>
    <url>/2021/12/26/010/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Mac环境下使用Sql Server，本来以为普通安装就可以解决问题，结果状况百出</p><h2 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h2><ol><li><code>Homebrew</code>环境、<code>php</code>环境</li><li><code>unixodbc</code>环境</li><li>安装<code>pdo_sqlsrv</code>、<code>sqlsrv</code>扩展</li></ol><p><a href="https://docs.microsoft.com/zh-cn/sql/connect/php/installation-tutorial-linux-mac">Microsoft官方教程</a></p><p>这里我是通过<code>brew</code>安装的<code>php</code>7.4</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">brew install php@7.4<br></code></pre></div></td></tr></table></figure><p><img src="/img/010/image-20211224234853152.png" alt="image-20211224234853152"></p><p>有了上面的基础环境后，接下来安装ODBC 驱动程序， <code>pecl</code> 命令用它来安装 <code>PHP</code> 驱动程序</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">brew install unixodbc<br></code></pre></div></td></tr></table></figure><p>安装<code>PHP</code>扩展</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">sudo pecl install sqlsrv<br>sudo pecl install pdo_sqlsrv<br></code></pre></div></td></tr></table></figure><p>成功情况</p><p><img src="/img/010/image-20211224215040876.png" alt="image-20211224215040876"></p><h2 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h2><p>一般来说是说按照流程走是没有问题的，但是不出意外的话是会出意外的</p><p>如果是<code>PHP</code>版本问题就自己解决一下版本切换问题</p><p><code>HomeBrew</code> 有一个<code>brew-php-switcher</code>用来切换<code>PHP</code>版本</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">brew install brew-php-switcher<br></code></pre></div></td></tr></table></figure><p>除了版本问题另外一个最大的问题就是没有<code>ODBC</code>环境，但我最近碰到的问题就是我明明有这个环境还是安装失败</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">In file included from /private/tmp/pear/temp/pdo_sqlsrv/pdo_dbh.cpp:24:<br>In file included from /private/tmp/pear/temp/pdo_sqlsrv/php_pdo_sqlsrv_int.h:23:<br>In file included from /private/tmp/pear/temp/pdo_sqlsrv/shared/core_sqlsrv.h:41:<br>In file included from /private/tmp/pear/temp/pdo_sqlsrv/shared/FormattedPrint.h:24:<br>In file included from /private/tmp/pear/temp/pdo_sqlsrv/shared/xplat_winnls.h:24:<br>In file included from /private/tmp/pear/temp/pdo_sqlsrv/shared/typedefs_for_linux.h:23:<br>/private/tmp/pear/temp/pdo_sqlsrv/shared/xplat.h:30:10: fatal error: <span class="hljs-string">&#x27;sql.h&#x27;</span> file not found<br><br>类似于这样缺少 sql.h 之类头文件的<br></code></pre></div></td></tr></table></figure><p>我琢磨了半天，我以为是我<code>unixodbc</code>没有安装成功，结果使用命令<code>odbcinst -j</code>也得到他的安装情况</p><p>最后经过一番调查问题处在于我没有使用到<code>odbc</code>的头文件以及库文件</p><p>即 我需要调整一下<code>makefile</code>的一些参数</p><p>最后采用的安装方式</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">sudo CXXFLAGS=<span class="hljs-string">&quot;-I/opt/homebrew/Cellar/unixodbc/2.3.9_1/include&quot;</span> LDFLAGS=<span class="hljs-string">&quot;-L/opt/homebrew/lib&quot;</span> pecl install pdo_sqlsrv<br>sudo CXXFLAGS=<span class="hljs-string">&quot;-I/opt/homebrew/Cellar/unixodbc/2.3.9_1/include&quot;</span> LDFLAGS=<span class="hljs-string">&quot;-L/opt/homebrew/lib&quot;</span> pecl install sqlsrv<br></code></pre></div></td></tr></table></figure><blockquote><p><code>CXXFLAGS</code>表示用于 <code>C++</code> 编译器的选项</p><p><code>LDFLAGS</code>是传递给连接器的选项</p><p><code>-I(大写i)</code>表示以这个目录目录作为第一个寻找头文件的目录</p><p><code>-L(大写l)</code>标示以这个目录作为第一个寻找库文件的目录</p></blockquote><p>结果呢又遇到了这个问题</p><p><img src="https://worklink.oss-cn-hangzhou.aliyuncs.com/B7C78159CA5A4CB0077A8557FD39D659.png" alt="image-20211224183412690"></p><p>存在但是又不存在</p><p>这里最简单的处理方式为直接删了这个软链接</p><p>如果有问题的话大不了把这里的文件复制到软链接指向的地方，再进行软链接就ok了</p><p><img src="https://worklink.oss-cn-hangzhou.aliyuncs.com/E6A05448002F6A139FA0CC561428CB6A.png" alt="image-20211224214816305"></p><p>到这里的话基本上已经安装好了</p><p>可是呢 后来还是遇到了一个小问题 有关于<code>openssl</code>的处理方案也是很简单 <a href="https://github.com/microsoft/msphpsql/issues/1319">参考</a></p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> /opt/homebrew/opt/openssl<br><span class="hljs-built_in">ln</span> -s /opt/homebrew/Cellar/openssl@1.1/1.1.1m /opt/homebrew/opt/openssl<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>杂记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
      <tag>Mac</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>手动破解 XMind ZEN</title>
    <link href="/2018/12/12/004.Poje-XMind-ZEN/"/>
    <url>/2018/12/12/004.Poje-XMind-ZEN/</url>
    
    <content type="html"><![CDATA[<p>首先说明一下，尊重作者的产品。</p><p>本片文章思路来源于<a href="https://dxkite.cn/2018/11/17/xmind-zen-remove-watermark/">dx老哥的文章</a>，仅加以完善。</p><blockquote><p><code>XMind ZEN</code> 是一款免费的软件，只是在导出的时候安排上了专属水印</p></blockquote><p>这次的破解 采用绕过式 仅属于娱乐</p><h2 id="干货"><a href="#干货" class="headerlink" title="干货"></a>干货</h2><p>首先我们需要了解一下我们的<code>XMind ZEN</code>的安装位置在哪:<br><code>C:\Program Files\XMind ZEN</code><br><img src="https://worklink.oss-cn-hangzhou.aliyuncs.com/5DCEAA909885A0DB44922255FD2EB09D.png" alt="1.png"></p><p>我们采用的方法 不是删除，而是替换</p><h3 id="导出水印"><a href="#导出水印" class="headerlink" title="导出水印"></a>导出水印</h3><p>然后我们需要了解一下</p><p>矢量图文件位置：<code>resources\out\imgs\[类型]-watermark-[语言].svg</code><br>比如：中文的PNG导出的水印：矢量图文件位置：<code>resources\out\imgs\png-watermark-zh-CN.svg</code></p><h4 id="PNG去水印"><a href="#PNG去水印" class="headerlink" title="PNG去水印"></a>PNG去水印</h4><p>因为我们大部分采用的都是中文模式，所以对应的文件应该是：<br><code>resources\out\imgs\png-watermark-zh-CN.svg</code></p><p>这里拿英文版本的进行对比<br><img src="https://worklink.oss-cn-hangzhou.aliyuncs.com/FC72626A58FA29D28A086A3455519A85.png" alt="2.png"></p><p>我们将不透明度设置为0，即全透明，不影响导出</p><h4 id="PDF去水印"><a href="#PDF去水印" class="headerlink" title="PDF去水印"></a>PDF去水印</h4><p>pdf背景水印路径：<br><code>resources\app\out\imgs\print-watermark-zh-CN.svg</code><br><img src="https://worklink.oss-cn-hangzhou.aliyuncs.com/06D62F60B8859F26AE92F37DBFB06012.png" alt="3.png"><br>将它设置为透明 <code>opacity=&quot;0&quot;</code></p><p>pdf 底部水印<br><code>resources\app\out\imgs\pdf-footer-zh-CN.svg</code><br><img src="https://worklink.oss-cn-hangzhou.aliyuncs.com/1228D378053B25A7D950DEA1A160D265.png" alt="4.png"><br>我们可以考虑下 添加透明度 <code>opacity=&quot;0&quot;</code></p><p>到这里 我们其实可以发现<br>除了手动添加一定内容，也可以考虑把水印内容全部删除，也有同样的奇效</p><h3 id="订阅弹窗"><a href="#订阅弹窗" class="headerlink" title="订阅弹窗"></a>订阅弹窗</h3><p>在保存的时候时常会出现一个窗口，提示你订阅购买该产品<br><img src="https://worklink.oss-cn-hangzhou.aliyuncs.com/F95DAE3D6848C6A60C6DBA02B91EF3CC.png" alt="5.png"></p><p>这个比较神奇<br>首先我们找到路径<br><code>resources\app\out\modal-activateAlert.js</code><br>发现这个js文件压缩在一起了</p><p>于是</p><p>找一个<a href="http://tool.chinaz.com/tools/jsformat.aspx">在线js格式化</a> <code>格式化</code>一下</p><p>然后再复制粘贴回来</p><p>于是奇效发生了</p><p>ps.只适合 <code>v9.1.3</code>版本之前，因为在这个版本之后对文件进行了打包<br>可以考虑到该文件下<br><code>resources\app\locales\new_translations.json</code><br>进行修改取消更新提醒 <code>&quot;Software Update&quot;: false,</code></p><h2 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h2><p><a href="https://www.lanzous.com/i2lfoeb">XMind ZEN v9.0.6</a></p>]]></content>
    
    
    <categories>
      
      <category>杂记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>破解</tag>
      
      <tag>Xmind</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>转移Hexo搭建的博客到自己的阿里云服务器</title>
    <link href="/2018/08/07/003.Blog-transfer-Hexo-built-blog-to-own-server/"/>
    <url>/2018/08/07/003.Blog-transfer-Hexo-built-blog-to-own-server/</url>
    
    <content type="html"><![CDATA[<p>上一篇文章介绍了如何配置<code>Hexo</code>，但是在使用的时候发现<code>Github</code>的速度并不能让人满意，于是开始转战我的阿里云</p><h3 id="创建一个-git-用户-专门运行-git-服务"><a href="#创建一个-git-用户-专门运行-git-服务" class="headerlink" title="创建一个 git 用户 专门运行 git 服务"></a>创建一个 <code>git</code> 用户 专门运行 <code>git</code> 服务</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Bash">$ sudo adduser git<br></code></pre></div></td></tr></table></figure><p>为了安全</p><h3 id="ssh-连接配对"><a href="#ssh-连接配对" class="headerlink" title="ssh 连接配对"></a>ssh 连接配对</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Bash">$ ssh-keygen<br></code></pre></div></td></tr></table></figure><p>创建公钥私钥对</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Bash">$ ssh-copy-id -i .ssh/id_rsa.pub  用户名字@192.168.x.xxx<br></code></pre></div></td></tr></table></figure><p>将公钥复制到远程机器中</p><p>我的ssh好像翻车了 但是问题不大 手动输入密码<br>这里的作用就是方便连接</p><blockquote><p><code>ssh-keygen</code>  产生公钥与私钥对.<br><code>ssh-copy-id</code> 将本机的公钥复制到远程机器的<br>创建证书登录，把自己电脑的公钥，也就是 <code>~/.ssh/id_rsa.pub</code> 文件里的内容添加到服务器的 <code>/home/git/.ssh/authorized_keys</code> 文件中，添加公钥之后可以防止每次 push 都输入密码。</p></blockquote><h3 id="在服务器上弄个-Git-仓库"><a href="#在服务器上弄个-Git-仓库" class="headerlink" title="在服务器上弄个 Git 仓库"></a>在服务器上弄个 Git 仓库</h3><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> hexo.git</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> hexo.git</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git init --bare</span><br></code></pre></div></td></tr></table></figure><p>使用 –bare 参数，Git 就会创建一个裸仓库，为共享而存在</p><h3 id="编写脚本"><a href="#编写脚本" class="headerlink" title="编写脚本"></a>编写脚本</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Bash">`$ <span class="hljs-built_in">cd</span> /home/git/hexo.git/hooks`<br></code></pre></div></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Bash">`$ vim post-receive`<br></code></pre></div></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Bash"><span class="hljs-meta">#!/bin/sh</span><br>git --work-tree=/www/wwwroot/www.mobenw.cn --git-dir=/home/git/hexo.git checkout -f<br></code></pre></div></td></tr></table></figure><blockquote><p><code>/www/wwwroot/www.mobenw.cn</code> 网站目录<br><code>/home/git/hexo.git</code> 仓库</p></blockquote><p>以上操作实现了自动部署的功能</p><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Bash">$ <span class="hljs-built_in">chmod</span> +x post-receive<br>为这个文件提权<br></code></pre></div></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Bash">$ sudo <span class="hljs-built_in">chown</span> -R git:git hexo.git<br></code></pre></div></td></tr></table></figure><p>使<code>hexo.blog</code>该目录的拥有者为 <code>git</code></p><p><code>$ chmod 777 -R /www/wwwroot/www.mobenw.cn</code><br>至少这里有写的权限</p><h3 id="本地配置"><a href="#本地配置" class="headerlink" title="本地配置"></a>本地配置</h3><p>本地<code>hexo</code>目录下的<br><strong><code>_config.yml</code></strong></p><figure class="highlight yml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <br>    <span class="hljs-attr">aliyun:</span> <span class="hljs-string">git@192.168.x.xxx:/home/git/hexo.git</span><br></code></pre></div></td></tr></table></figure><h3 id="收工"><a href="#收工" class="headerlink" title="收工"></a>收工</h3><p>接下来就是正常的 hexo 的操作…</p>]]></content>
    
    
    <categories>
      
      <category>Hexo博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>NexT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客美化记</title>
    <link href="/2018/08/07/002.Blog-to-optimize/"/>
    <url>/2018/08/07/002.Blog-to-optimize/</url>
    
    <content type="html"><![CDATA[<h3 id="不蒜子-浏览记录"><a href="#不蒜子-浏览记录" class="headerlink" title="不蒜子 浏览记录"></a>不蒜子 浏览记录</h3><figure class="highlight yml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yml"><span class="hljs-attr">busuanzi_count:</span><br>  <span class="hljs-comment"># count values only if the other configs are false</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-comment"># custom uv span for the whole site</span><br>  <span class="hljs-attr">site_uv:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">site_uv_header:</span> <span class="hljs-string">&lt;i</span> <span class="hljs-string">class=&quot;fa</span> <span class="hljs-string">fa-user&quot;&gt;&lt;/i&gt;</span> <span class="hljs-string">访问人数</span><br>  <span class="hljs-attr">site_uv_footer:</span><br>  <span class="hljs-comment"># custom pv span for the whole site</span><br>  <span class="hljs-attr">site_pv:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">site_pv_header:</span> <span class="hljs-string">&lt;i</span> <span class="hljs-string">class=&quot;fa</span> <span class="hljs-string">fa-street-view&quot;&gt;&lt;/i&gt;</span> <span class="hljs-string">总访问量</span><br>  <span class="hljs-attr">site_pv_footer:</span> <span class="hljs-string">次</span><br>  <span class="hljs-comment"># custom pv span for one page only</span><br>  <span class="hljs-attr">page_pv:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">page_pv_header:</span> <span class="hljs-string">&lt;i</span> <span class="hljs-string">class=&quot;fa</span> <span class="hljs-string">fa-eye&quot;&gt;&lt;/i&gt;</span> <span class="hljs-string">Visitors</span><br>  <span class="hljs-attr">page_pv_footer:</span> <span class="hljs-string">_</span><br></code></pre></div></td></tr></table></figure><blockquote><p>因七牛强制过期『dn-lbstatics.qbox.me』域名，与客服沟通无果，只能更换域名到『busuanzi.ibruce.info』！<br>修复最新无法显示 修改该文件 <code>/themes/next/layout/_third-party/analytics/busuanzi-counter.swig</code> 引用的域名 </p></blockquote><h3 id="给网页title添加一些搞怪特效"><a href="#给网页title添加一些搞怪特效" class="headerlink" title="给网页title添加一些搞怪特效"></a>给网页title添加一些搞怪特效</h3><p>在<code>next\source\js\src</code>文件夹下创建<code>crash_cheat.js</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js">&lt;!--崩溃欺骗--&gt;<br> <span class="hljs-keyword">var</span> <span class="hljs-title class_">OriginTitle</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span>;<br> <span class="hljs-keyword">var</span> titleTime;<br> <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;visibilitychange&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>     <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-property">hidden</span>) &#123;<br>         $(<span class="hljs-string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;href&#x27;</span>, <span class="hljs-string">&quot;/img/TEP.ico&quot;</span>);<br>         <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&#x27;╭(°A°`)╮ 页面崩溃啦 ~&#x27;</span>;<br>         <span class="hljs-built_in">clearTimeout</span>(titleTime);<br>     &#125;<br>     <span class="hljs-keyword">else</span> &#123;<br>         $(<span class="hljs-string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;href&#x27;</span>, <span class="hljs-string">&quot;/favicon.ico&quot;</span>);<br>         <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&#x27;(ฅ&gt;ω&lt;*ฅ) 噫又好了~&#x27;</span> + <span class="hljs-title class_">OriginTitle</span>;<br>         titleTime = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>             <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-title class_">OriginTitle</span>;<br>         &#125;, <span class="hljs-number">2000</span>);<br>     &#125;<br> &#125;);<br></code></pre></div></td></tr></table></figure><p>在next\layout_layout.swig文件中，添加引用（注：在swig末尾添加）：</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--崩溃欺骗--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/src/crash_cheat.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="给页面的底部添加小js"><a href="#给页面的底部添加小js" class="headerlink" title="给页面的底部添加小js"></a>给页面的底部添加小js</h3><p>在<code>next\source\js\src</code>文件夹下创建<code>chakhsu.js</code></p><figure class="highlight js"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs js"><span class="hljs-keyword">var</span> chakhsu = <span class="hljs-keyword">function</span> (<span class="hljs-params">r</span>) &#123;<br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">t</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-keyword">return</span> b[<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * b.<span class="hljs-property">length</span>)]<br>  &#125;<br><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">e</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(<span class="hljs-number">94</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() + <span class="hljs-number">33</span>)<br>  &#125;<br><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">n</span>(<span class="hljs-params">r</span>) &#123;<br>      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> n = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createDocumentFragment</span>(), i = <span class="hljs-number">0</span>; r &gt; i; i++) &#123;<br>          <span class="hljs-keyword">var</span> l = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;span&quot;</span>);<br>          l.<span class="hljs-property">textContent</span> = <span class="hljs-title function_">e</span>(), l.<span class="hljs-property">style</span>.<span class="hljs-property">color</span> = <span class="hljs-title function_">t</span>(), n.<span class="hljs-title function_">appendChild</span>(l)<br>      &#125;<br>      <span class="hljs-keyword">return</span> n<br>  &#125;<br><br>  <span class="hljs-keyword">function</span> <span class="hljs-title function_">i</span>(<span class="hljs-params"></span>) &#123;<br>      <span class="hljs-keyword">var</span> t = o[c.<span class="hljs-property">skillI</span>];<br>      c.<span class="hljs-property">step</span> ? c.<span class="hljs-property">step</span>-- : (c.<span class="hljs-property">step</span> = g, c.<span class="hljs-property">prefixP</span> &lt; l.<span class="hljs-property">length</span> ? (c.<span class="hljs-property">prefixP</span> &gt;= <span class="hljs-number">0</span> &amp;&amp; (c.<span class="hljs-property">text</span> += l[c.<span class="hljs-property">prefixP</span>]), c.<span class="hljs-property">prefixP</span>++) :<br>              <span class="hljs-string">&quot;forward&quot;</span> === c.<span class="hljs-property">direction</span> ? c.<span class="hljs-property">skillP</span> &lt; t.<span class="hljs-property">length</span> ? (c.<span class="hljs-property">text</span> += t[c.<span class="hljs-property">skillP</span>], c.<span class="hljs-property">skillP</span>++) : c.<span class="hljs-property">delay</span> ?<br>              c.<span class="hljs-property">delay</span>-- : (c.<span class="hljs-property">direction</span> = <span class="hljs-string">&quot;backward&quot;</span>, c.<span class="hljs-property">delay</span> = a) : c.<span class="hljs-property">skillP</span> &gt; <span class="hljs-number">0</span> ? (c.<span class="hljs-property">text</span> = c.<span class="hljs-property">text</span>.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>,<br>                  -<span class="hljs-number">1</span>), c.<span class="hljs-property">skillP</span>--) : (c.<span class="hljs-property">skillI</span> = (c.<span class="hljs-property">skillI</span> + <span class="hljs-number">1</span>) % o.<span class="hljs-property">length</span>, c.<span class="hljs-property">direction</span> = <span class="hljs-string">&quot;forward&quot;</span>)), r.<span class="hljs-property">textContent</span> =<br>          c.<span class="hljs-property">text</span>, r.<span class="hljs-title function_">appendChild</span>(<span class="hljs-title function_">n</span>(c.<span class="hljs-property">prefixP</span> &lt; l.<span class="hljs-property">length</span> ? <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(s, s + c.<span class="hljs-property">prefixP</span>) : <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">min</span>(s, t.<span class="hljs-property">length</span> -<br>              c.<span class="hljs-property">skillP</span>))), <span class="hljs-built_in">setTimeout</span>(i, d)<br>  &#125;<br>  <span class="hljs-keyword">var</span> l = <span class="hljs-string">&quot;I work with &quot;</span>,<br>      o = [<span class="hljs-string">&quot;You&quot;</span>, <span class="hljs-string">&quot;JavaScript&quot;</span>, <span class="hljs-string">&quot;HTML &amp; CSS&quot;</span>, <span class="hljs-string">&quot;Node.js&quot;</span>, <span class="hljs-string">&quot;React&quot;</span>, <span class="hljs-string">&quot;passion &amp; love&quot;</span>].<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">r</span>) &#123;<br>          <span class="hljs-keyword">return</span> r + <span class="hljs-string">&quot;.&quot;</span><br>      &#125;),<br>      a = <span class="hljs-number">2</span>,<br>      g = <span class="hljs-number">1</span>,<br>      s = <span class="hljs-number">5</span>,<br>      d = <span class="hljs-number">75</span>,<br>      b = [<span class="hljs-string">&quot;rgb(110,64,170)&quot;</span>, <span class="hljs-string">&quot;rgb(150,61,179)&quot;</span>, <span class="hljs-string">&quot;rgb(191,60,175)&quot;</span>, <span class="hljs-string">&quot;rgb(228,65,157)&quot;</span>, <span class="hljs-string">&quot;rgb(254,75,131)&quot;</span>,<br>          <span class="hljs-string">&quot;rgb(255,94,99)&quot;</span>, <span class="hljs-string">&quot;rgb(255,120,71)&quot;</span>, <span class="hljs-string">&quot;rgb(251,150,51)&quot;</span>, <span class="hljs-string">&quot;rgb(226,183,47)&quot;</span>, <span class="hljs-string">&quot;rgb(198,214,60)&quot;</span>,<br>          <span class="hljs-string">&quot;rgb(175,240,91)&quot;</span>, <span class="hljs-string">&quot;rgb(127,246,88)&quot;</span>, <span class="hljs-string">&quot;rgb(82,246,103)&quot;</span>, <span class="hljs-string">&quot;rgb(48,239,130)&quot;</span>, <span class="hljs-string">&quot;rgb(29,223,163)&quot;</span>,<br>          <span class="hljs-string">&quot;rgb(26,199,194)&quot;</span>, <span class="hljs-string">&quot;rgb(35,171,216)&quot;</span>, <span class="hljs-string">&quot;rgb(54,140,225)&quot;</span>, <span class="hljs-string">&quot;rgb(76,110,219)&quot;</span>, <span class="hljs-string">&quot;rgb(96,84,200)&quot;</span><br>      ],<br>      c = &#123;<br>          <span class="hljs-attr">text</span>: <span class="hljs-string">&quot;&quot;</span>,<br>          <span class="hljs-attr">prefixP</span>: -s,<br>          <span class="hljs-attr">skillI</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">skillP</span>: <span class="hljs-number">0</span>,<br>          <span class="hljs-attr">direction</span>: <span class="hljs-string">&quot;forward&quot;</span>,<br>          <span class="hljs-attr">delay</span>: a,<br>          <span class="hljs-attr">step</span>: g<br>      &#125;;<br>  <span class="hljs-title function_">i</span>()<br>&#125;;<br><span class="hljs-title function_">chakhsu</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;chakhsu&#x27;</span>));<br><br></code></pre></div></td></tr></table></figure><p>在next\layout_layout.swig文件中，添加引用（注：在swig末尾添加）：</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--有趣的一段话--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/src/chakhsu.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p>在<code>layout\_partials\footer.swig</code> 添加</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;chakhsu&quot;</span>&gt;</span>I work with passion<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: rgb(255, 94, 99);&quot;</span>&gt;</span>/<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: rgb(96, 84, 200);&quot;</span>&gt;</span>P<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span></span><br><span class="hljs-tag">          <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: rgb(191, 60, 175);&quot;</span>&gt;</span>&#123;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: rgb(198, 214, 60);&quot;</span>&gt;</span>W<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: rgb(76, 110, 219);&quot;</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="右上角角标"><a href="#右上角角标" class="headerlink" title="右上角角标"></a>右上角角标</h3><p><code>Blog/themes/next/layout/_layout.swig</code><br>放在<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>下方</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://your-url&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;github-corner&quot;</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">&quot;View source on GitHub&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;80&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;80&quot;</span> <span class="hljs-attr">viewBox</span>=<span class="hljs-string">&quot;0 0 250 250&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2&quot;</span> <span class="hljs-attr">fill</span>=<span class="hljs-string">&quot;currentColor&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;transform-origin: 130px 106px;&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;octo-arm&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z&quot;</span> <span class="hljs-attr">fill</span>=<span class="hljs-string">&quot;currentColor&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;octo-body&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"><span class="hljs-selector-class">.github-corner</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.octo-arm</span>&#123;<span class="hljs-attribute">animation</span>:octocat-wave <span class="hljs-number">560ms</span> ease-in-out&#125;<span class="hljs-keyword">@keyframes</span> octocat-wave&#123;<span class="hljs-number">0%</span>,<span class="hljs-number">100%</span>&#123;<span class="hljs-attribute">transform</span>:<span class="hljs-built_in">rotate</span>(<span class="hljs-number">0</span>)&#125;<span class="hljs-number">20%</span>,<span class="hljs-number">60%</span>&#123;<span class="hljs-attribute">transform</span>:<span class="hljs-built_in">rotate</span>(-<span class="hljs-number">25deg</span>)&#125;<span class="hljs-number">40%</span>,<span class="hljs-number">80%</span>&#123;<span class="hljs-attribute">transform</span>:<span class="hljs-built_in">rotate</span>(<span class="hljs-number">10deg</span>)&#125;&#125;<span class="hljs-keyword">@media</span> (<span class="hljs-attribute">max-width</span>:<span class="hljs-number">500px</span>)&#123;<span class="hljs-selector-class">.github-corner</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.octo-arm</span>&#123;<span class="hljs-attribute">animation</span>:none&#125;<span class="hljs-selector-class">.github-corner</span> <span class="hljs-selector-class">.octo-arm</span>&#123;<span class="hljs-attribute">animation</span>:octocat-wave <span class="hljs-number">560ms</span> ease-in-out&#125;&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="跳动的心"><a href="#跳动的心" class="headerlink" title="跳动的心"></a>跳动的心</h3><p>打开<code>Blog/themes/next/layout/_partials/footer.swig</code>搜索<code>with-love</code><br>替换</p><h3 id="修改超链接颜色"><a href="#修改超链接颜色" class="headerlink" title="修改超链接颜色"></a>修改超链接颜色</h3><p>路径<br><code>themes\next\source\css\_common\components\post\post.styl</code><br>一个超级粉嫩的颜色<code>#ff4081;</code></p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css">// 文章内链接文本样式<br><span class="hljs-selector-class">.post-body</span> <span class="hljs-selector-tag">p</span> <span class="hljs-selector-tag">a</span>&#123;<br>  //<span class="hljs-attribute">color</span>: <span class="hljs-number">#0593d3</span>; //原始链接颜色<br>  <span class="hljs-attribute">border-bottom</span>: none;<br>  <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid;// <span class="hljs-selector-id">#0593d3</span>; //底部分割线颜色<br>  &amp;<span class="hljs-selector-pseudo">:hover</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#ff4081</span>; //鼠标经过颜色<br>    <span class="hljs-attribute">border-bottom</span>: none;<br>    <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ff4081</span>; //底部分割线颜色<br>  &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="修改代码块颜色"><a href="#修改代码块颜色" class="headerlink" title="修改代码块颜色"></a>修改代码块颜色</h3><p>路径<br><code>themes\next\source\css\_custom\custom.styl</code><br>冲</p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css">// Custom styles.<br><span class="hljs-selector-tag">code</span> &#123;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#ff4081</span>;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#f3f3f3</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">2px</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="gitalk"><a href="#gitalk" class="headerlink" title="gitalk"></a>gitalk</h3><p><a href="https://asdfv1929.github.io/2018/01/20/gitalk/">学习大佬操作</a></p><h4 id="gitalk-swig"><a href="#gitalk-swig" class="headerlink" title="gitalk.swig"></a>gitalk.swig</h4><p>新建<code>/layout/_third-party/comments/gitalk.swig</code>文件，并添加内容：</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html">&#123;% if page.comments &amp;&amp; theme.gitalk.enable %&#125;<br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://unpkg.com/gitalk/dist/gitalk.css&quot;</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://unpkg.com/gitalk/dist/gitalk.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span><br><span class="language-xml"><span class="language-handlebars">        var gitalk = new Gitalk(&#123;</span></span><br><span class="language-xml"><span class="language-handlebars">          clientID: &#x27;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">theme.gitalk.ClientID</span> &#125;&#125;</span><span class="language-xml">&#x27;,</span></span><br><span class="language-xml"><span class="language-handlebars">          clientSecret: &#x27;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">theme.gitalk.ClientSecret</span> &#125;&#125;</span><span class="language-xml">&#x27;,</span></span><br><span class="language-xml"><span class="language-handlebars">          repo: &#x27;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">theme.gitalk.repo</span> &#125;&#125;</span><span class="language-xml">&#x27;,</span></span><br><span class="language-xml"><span class="language-handlebars">          owner: &#x27;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">theme.gitalk.githubID</span> &#125;&#125;</span><span class="language-xml">&#x27;,</span></span><br><span class="language-xml"><span class="language-handlebars">          admin: [&#x27;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">theme.gitalk.adminUser</span> &#125;&#125;</span><span class="language-xml">&#x27;],</span></span><br><span class="language-xml"><span class="language-handlebars">          id: location.pathname,</span></span><br><span class="language-xml"><span class="language-handlebars">          distractionFreeMode: &#x27;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">theme.gitalk.distractionFreeMode</span> &#125;&#125;</span><span class="language-xml">&#x27;</span></span><br><span class="language-xml"><span class="language-handlebars">        &#125;)</span></span><br><span class="language-xml"><span class="language-handlebars">        gitalk.render(&#x27;gitalk-container&#x27;)           </span></span><br><span class="language-xml"><span class="language-handlebars">       </span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>&#123;% endif %&#125;<br></code></pre></div></td></tr></table></figure><h4 id="comments-swig"><a href="#comments-swig" class="headerlink" title="comments.swig"></a>comments.swig</h4><p>修改<code>/layout/_partials/comments.swig</code>，添加内容如下，与前面的elseif同一级别上：</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html">&#123;% elseif theme.gitalk.enable %&#125;<br> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;gitalk-container&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h4 id="index-swig"><a href="#index-swig" class="headerlink" title="index.swig"></a>index.swig</h4><p>修改<code>layout/_third-party/comments/index.swig</code>，在最后一行添加内容：</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html">&#123;% include &#x27;gitalk.swig&#x27; %&#125;<br></code></pre></div></td></tr></table></figure><h4 id="gitalk-styl"><a href="#gitalk-styl" class="headerlink" title="gitalk.styl"></a>gitalk.styl</h4><p>新建<code>/source/css/_common/components/third-party/gitalk.styl</code>文件，添加内容：</p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-selector-class">.gt-header</span> <span class="hljs-selector-tag">a</span>, <span class="hljs-selector-class">.gt-comments</span> <span class="hljs-selector-tag">a</span>, <span class="hljs-selector-class">.gt-popup</span> <span class="hljs-selector-tag">a</span><br>  <span class="hljs-attribute">border-bottom</span>: none;<br><span class="hljs-selector-class">.gt-container</span> <span class="hljs-selector-class">.gt-popup</span> <span class="hljs-selector-class">.gt-action</span><span class="hljs-selector-class">.is--active</span><span class="hljs-selector-pseudo">:before</span><br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0.7em</span>;<br></code></pre></div></td></tr></table></figure><h4 id="third-party-styl"><a href="#third-party-styl" class="headerlink" title="third-party.styl"></a>third-party.styl</h4><p>修改<code>/source/css/_common/components/third-party/third-party.styl</code>，在最后一行上添加内容，引入样式：</p><figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css"><span class="hljs-keyword">@import</span> <span class="hljs-string">&quot;gitalk&quot;</span>;<br></code></pre></div></td></tr></table></figure><h4 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h4><p>在主题配置文件next/_config.yml中添加如下内容：</p><figure class="highlight yml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yml"><span class="hljs-attr">gitalk:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">githubID:</span> <span class="hljs-string">github帐号</span>  <span class="hljs-comment"># 例：mobenw</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">仓库名称</span>   <span class="hljs-comment"># mobenw.github.io</span><br>  <span class="hljs-attr">ClientID:</span> <span class="hljs-string">Client</span> <span class="hljs-string">ID</span><br>  <span class="hljs-attr">ClientSecret:</span> <span class="hljs-string">Client</span> <span class="hljs-string">Secret</span><br>  <span class="hljs-attr">adminUser:</span> <span class="hljs-string">github帐号</span> <span class="hljs-comment">#指定可初始化评论账户</span><br>  <span class="hljs-attr">distractionFreeMode:</span> <span class="hljs-literal">true</span><br></code></pre></div></td></tr></table></figure><h3 id="修改底部标签样式"><a href="#修改底部标签样式" class="headerlink" title="修改底部标签样式"></a>修改底部标签样式</h3><p>修改<code>Blog\themes\next\layout\_macro\post.swig</code>中文件<br>查找<code>rel=&quot;tag&quot;&gt;#</code><br>将#替换成<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code>输入以下命令</p><h3 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h3><p>local_search</p><p><code>npm install hexo-generator-searchdb --save</code></p><p>站点配置文件 添加</p><figure class="highlight yml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yml"><span class="hljs-comment"># 本地搜索</span><br><span class="hljs-attr">search:</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">search.xml</span><br>  <span class="hljs-attr">field:</span> <span class="hljs-string">post</span><br>  <span class="hljs-attr">format:</span> <span class="hljs-string">html</span><br>  <span class="hljs-attr">limit:</span> <span class="hljs-number">10000</span><br></code></pre></div></td></tr></table></figure><p>主题配置文件 开启 <code>enable: ture</code></p><h3 id="点击有小爱心"><a href="#点击有小爱心" class="headerlink" title="点击有小爱心"></a>点击有小爱心</h3><h4 id="创建一个js文件"><a href="#创建一个js文件" class="headerlink" title="创建一个js文件"></a>创建一个js文件</h4><p>在<code>\themes\next\source\js\src</code>下新建文件<strong>clicklove.js</strong><br>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs JavaScript">! <span class="hljs-keyword">function</span> (<span class="hljs-params">e, t, a</span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">n</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-title function_">c</span>(<span class="hljs-string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>), <span class="hljs-title function_">o</span>(), <span class="hljs-title function_">r</span>()<br>    &#125;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">r</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = <span class="hljs-number">0</span>; e &lt; d.<span class="hljs-property">length</span>; e++) d[e].<span class="hljs-property">alpha</span> &lt;= <span class="hljs-number">0</span> ? (t.<span class="hljs-property">body</span>.<span class="hljs-title function_">removeChild</span>(d[e].<span class="hljs-property">el</span>), d.<span class="hljs-title function_">splice</span>(e, <span class="hljs-number">1</span>)) : (d[e].<span class="hljs-property">y</span>--, d[e].<span class="hljs-property">scale</span> += <span class="hljs-number">.004</span>, d[e].<span class="hljs-property">alpha</span> -= <span class="hljs-number">.013</span>, d[e].<span class="hljs-property">el</span>.<span class="hljs-property">style</span>.<span class="hljs-property">cssText</span> = <span class="hljs-string">&quot;left:&quot;</span> + d[e].<span class="hljs-property">x</span> + <span class="hljs-string">&quot;px;top:&quot;</span> + d[e].<span class="hljs-property">y</span> + <span class="hljs-string">&quot;px;opacity:&quot;</span> + d[e].<span class="hljs-property">alpha</span> + <span class="hljs-string">&quot;;transform:scale(&quot;</span> + d[e].<span class="hljs-property">scale</span> + <span class="hljs-string">&quot;,&quot;</span> + d[e].<span class="hljs-property">scale</span> + <span class="hljs-string">&quot;) rotate(45deg);background:&quot;</span> + d[e].<span class="hljs-property">color</span> + <span class="hljs-string">&quot;;z-index:99999&quot;</span>);<br>        <span class="hljs-title function_">requestAnimationFrame</span>(r)<br>    &#125;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">o</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">var</span> t = <span class="hljs-string">&quot;function&quot;</span> == <span class="hljs-keyword">typeof</span> e.<span class="hljs-property">onclick</span> &amp;&amp; e.<span class="hljs-property">onclick</span>;<br>        e.<span class="hljs-property">onclick</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>            t &amp;&amp; <span class="hljs-title function_">t</span>(), <span class="hljs-title function_">i</span>(e)<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">i</span>(<span class="hljs-params">e</span>) &#123;<br>        <span class="hljs-keyword">var</span> a = t.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>);<br>        a.<span class="hljs-property">className</span> = <span class="hljs-string">&quot;heart&quot;</span>, d.<span class="hljs-title function_">push</span>(&#123;<br>            <span class="hljs-attr">el</span>: a,<br>            <span class="hljs-attr">x</span>: e.<span class="hljs-property">clientX</span> - <span class="hljs-number">5</span>,<br>            <span class="hljs-attr">y</span>: e.<span class="hljs-property">clientY</span> - <span class="hljs-number">5</span>,<br>            <span class="hljs-attr">scale</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-attr">alpha</span>: <span class="hljs-number">1</span>,<br>            <span class="hljs-attr">color</span>: <span class="hljs-title function_">s</span>()<br>        &#125;), t.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(a)<br>    &#125;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">c</span>(<span class="hljs-params">e</span>) &#123;<br>        <span class="hljs-keyword">var</span> a = t.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;style&quot;</span>);<br>        a.<span class="hljs-property">type</span> = <span class="hljs-string">&quot;text/css&quot;</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            a.<span class="hljs-title function_">appendChild</span>(t.<span class="hljs-title function_">createTextNode</span>(e))<br>        &#125; <span class="hljs-keyword">catch</span> (t) &#123;<br>            a.<span class="hljs-property">styleSheet</span>.<span class="hljs-property">cssText</span> = e<br>        &#125;<br>        t.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&quot;head&quot;</span>)[<span class="hljs-number">0</span>].<span class="hljs-title function_">appendChild</span>(a)<br>    &#125;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">s</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;rgb(&quot;</span> + ~~ (<span class="hljs-number">255</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>()) + <span class="hljs-string">&quot;,&quot;</span> + ~~ (<span class="hljs-number">255</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>()) + <span class="hljs-string">&quot;,&quot;</span> + ~~ (<span class="hljs-number">255</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>()) + <span class="hljs-string">&quot;)&quot;</span><br>    &#125;<br>    <span class="hljs-keyword">var</span> d = [];<br>    e.<span class="hljs-property">requestAnimationFrame</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> e.<span class="hljs-property">requestAnimationFrame</span> || e.<span class="hljs-property">webkitRequestAnimationFrame</span> || e.<span class="hljs-property">mozRequestAnimationFrame</span> || e.<span class="hljs-property">oRequestAnimationFrame</span> || e.<span class="hljs-property">msRequestAnimationFrame</span> || <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-built_in">setTimeout</span>(e, <span class="hljs-number">1e3</span> / <span class="hljs-number">60</span>)<br>        &#125;<br>    &#125;(), <span class="hljs-title function_">n</span>()<br>&#125;(<span class="hljs-variable language_">window</span>, <span class="hljs-variable language_">document</span>);<br></code></pre></div></td></tr></table></figure><h4 id="修改-layout-swig"><a href="#修改-layout-swig" class="headerlink" title="修改_layout.swig"></a>修改_layout.swig</h4><p>在<code>\themes\next\layout\_layout.swig</code>文件末尾添加以下代码(纳闷了 为啥放哪都行 神奇的script 不过建议放后面 不然有bug)</p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs JavaScript">&lt;!-- 页面点击小红心 --&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/src/clicklove.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></div></td></tr></table></figure><h3 id="点击有爆炸效果"><a href="#点击有爆炸效果" class="headerlink" title="点击有爆炸效果"></a>点击有爆炸效果</h3><h4 id="创建一个js文件-1"><a href="#创建一个js文件-1" class="headerlink" title="创建一个js文件"></a>创建一个js文件</h4><p>同上<br><strong>fireworks.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs JavaScript"><span class="hljs-meta">&quot;use strict&quot;</span>;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">updateCoords</span>(<span class="hljs-params">e</span>) &#123;<br>    pointerX = (e.<span class="hljs-property">clientX</span> || e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientX</span>) - canvasEl.<span class="hljs-title function_">getBoundingClientRect</span>().<span class="hljs-property">left</span>,<br>    pointerY = e.<span class="hljs-property">clientY</span> || e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientY</span> - canvasEl.<span class="hljs-title function_">getBoundingClientRect</span>().<span class="hljs-property">top</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">setParticuleDirection</span>(<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-keyword">var</span> t = anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>, <span class="hljs-number">360</span>) * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">180</span>,<br>    a = anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">50</span>, <span class="hljs-number">180</span>),<br>    n = [ - <span class="hljs-number">1</span>, <span class="hljs-number">1</span>][anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>)] * a;<br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-attr">x</span>: e.<span class="hljs-property">x</span> + n * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(t),<br>        <span class="hljs-attr">y</span>: e.<span class="hljs-property">y</span> + n * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>(t)<br>    &#125;<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createParticule</span>(<span class="hljs-params">e, t</span>) &#123;<br>    <span class="hljs-keyword">var</span> a = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> a.<span class="hljs-property">x</span> = e,<br>    a.<span class="hljs-property">y</span> = t,<br>    a.<span class="hljs-property">color</span> = colors[anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>, colors.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>)],<br>    a.<span class="hljs-property">radius</span> = anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">16</span>, <span class="hljs-number">32</span>),<br>    a.<span class="hljs-property">endPos</span> = <span class="hljs-title function_">setParticuleDirection</span>(a),<br>    a.<span class="hljs-property">draw</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        ctx.<span class="hljs-title function_">beginPath</span>(),<br>        ctx.<span class="hljs-title function_">arc</span>(a.<span class="hljs-property">x</span>, a.<span class="hljs-property">y</span>, a.<span class="hljs-property">radius</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>, !<span class="hljs-number">0</span>),<br>        ctx.<span class="hljs-property">fillStyle</span> = a.<span class="hljs-property">color</span>,<br>        ctx.<span class="hljs-title function_">fill</span>()<br>    &#125;,<br>    a<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createCircle</span>(<span class="hljs-params">e, t</span>) &#123;<br>    <span class="hljs-keyword">var</span> a = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> a.<span class="hljs-property">x</span> = e,<br>    a.<span class="hljs-property">y</span> = t,<br>    a.<span class="hljs-property">color</span> = <span class="hljs-string">&quot;#F00&quot;</span>,<br>    a.<span class="hljs-property">radius</span> = <span class="hljs-number">0.1</span>,<br>    a.<span class="hljs-property">alpha</span> = <span class="hljs-number">0.5</span>,<br>    a.<span class="hljs-property">lineWidth</span> = <span class="hljs-number">6</span>,<br>    a.<span class="hljs-property">draw</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        ctx.<span class="hljs-property">globalAlpha</span> = a.<span class="hljs-property">alpha</span>,<br>        ctx.<span class="hljs-title function_">beginPath</span>(),<br>        ctx.<span class="hljs-title function_">arc</span>(a.<span class="hljs-property">x</span>, a.<span class="hljs-property">y</span>, a.<span class="hljs-property">radius</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>, !<span class="hljs-number">0</span>),<br>        ctx.<span class="hljs-property">lineWidth</span> = a.<span class="hljs-property">lineWidth</span>,<br>        ctx.<span class="hljs-property">strokeStyle</span> = a.<span class="hljs-property">color</span>,<br>        ctx.<span class="hljs-title function_">stroke</span>(),<br>        ctx.<span class="hljs-property">globalAlpha</span> = <span class="hljs-number">1</span><br>    &#125;,<br>    a<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">renderParticule</span>(<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = <span class="hljs-number">0</span>; t &lt; e.<span class="hljs-property">animatables</span>.<span class="hljs-property">length</span>; t++) &#123;<br>        e.<span class="hljs-property">animatables</span>[t].<span class="hljs-property">target</span>.<span class="hljs-title function_">draw</span>()<br>    &#125;<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">animateParticules</span>(<span class="hljs-params">e, t</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-title function_">createCircle</span>(e, t), n = [], i = <span class="hljs-number">0</span>; i &lt; numberOfParticules; i++) &#123;<br>        n.<span class="hljs-title function_">push</span>(<span class="hljs-title function_">createParticule</span>(e, t))<br>    &#125;<br>    anime.<span class="hljs-title function_">timeline</span>().<span class="hljs-title function_">add</span>(&#123;<br>        <span class="hljs-attr">targets</span>: n,<br>        <span class="hljs-attr">x</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-keyword">return</span> e.<span class="hljs-property">endPos</span>.<span class="hljs-property">x</span><br>        &#125;,<br>        <span class="hljs-attr">y</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-keyword">return</span> e.<span class="hljs-property">endPos</span>.<span class="hljs-property">y</span><br>        &#125;,<br>        <span class="hljs-attr">radius</span>: <span class="hljs-number">0.1</span>,<br>        <span class="hljs-attr">duration</span>: anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">1200</span>, <span class="hljs-number">1800</span>),<br>        <span class="hljs-attr">easing</span>: <span class="hljs-string">&quot;easeOutExpo&quot;</span>,<br>        <span class="hljs-attr">update</span>: renderParticule<br>    &#125;).<span class="hljs-title function_">add</span>(&#123;<br>        <span class="hljs-attr">targets</span>: a,<br>        <span class="hljs-attr">radius</span>: anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">80</span>, <span class="hljs-number">160</span>),<br>        <span class="hljs-attr">lineWidth</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">alpha</span>: &#123;<br>            <span class="hljs-attr">value</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-attr">easing</span>: <span class="hljs-string">&quot;linear&quot;</span>,<br>            <span class="hljs-attr">duration</span>: anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">600</span>, <span class="hljs-number">800</span>)<br>        &#125;,<br>        <span class="hljs-attr">duration</span>: anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">1200</span>, <span class="hljs-number">1800</span>),<br>        <span class="hljs-attr">easing</span>: <span class="hljs-string">&quot;easeOutExpo&quot;</span>,<br>        <span class="hljs-attr">update</span>: renderParticule,<br>        <span class="hljs-attr">offset</span>: <span class="hljs-number">0</span><br>    &#125;)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">debounce</span>(<span class="hljs-params">e, t</span>) &#123;<br>    <span class="hljs-keyword">var</span> a;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">var</span> n = <span class="hljs-variable language_">this</span>,<br>        i = <span class="hljs-variable language_">arguments</span>;<br>        <span class="hljs-built_in">clearTimeout</span>(a),<br>        a = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            e.<span class="hljs-title function_">apply</span>(n, i)<br>        &#125;,<br>        t)<br>    &#125;<br>&#125;<br><span class="hljs-keyword">var</span> canvasEl = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.fireworks&quot;</span>);<br><span class="hljs-keyword">if</span> (canvasEl) &#123;<br>    <span class="hljs-keyword">var</span> ctx = canvasEl.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>),<br>    numberOfParticules = <span class="hljs-number">30</span>,<br>    pointerX = <span class="hljs-number">0</span>,<br>    pointerY = <span class="hljs-number">0</span>,<br>    tap = <span class="hljs-string">&quot;mousedown&quot;</span>,<br>    colors = [<span class="hljs-string">&quot;#FF1461&quot;</span>, <span class="hljs-string">&quot;#18FF92&quot;</span>, <span class="hljs-string">&quot;#5A87FF&quot;</span>, <span class="hljs-string">&quot;#FBF38C&quot;</span>],<br>    setCanvasSize = <span class="hljs-title function_">debounce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        canvasEl.<span class="hljs-property">width</span> = <span class="hljs-number">2</span> * <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>,<br>        canvasEl.<span class="hljs-property">height</span> = <span class="hljs-number">2</span> * <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>,<br>        canvasEl.<span class="hljs-property">style</span>.<span class="hljs-property">width</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span> + <span class="hljs-string">&quot;px&quot;</span>,<br>        canvasEl.<span class="hljs-property">style</span>.<span class="hljs-property">height</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span> + <span class="hljs-string">&quot;px&quot;</span>,<br>        canvasEl.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>).<span class="hljs-title function_">scale</span>(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)<br>    &#125;,<br>    <span class="hljs-number">500</span>),<br>    render = <span class="hljs-title function_">anime</span>(&#123;<br>        <span class="hljs-attr">duration</span>: <span class="hljs-number">1</span> / <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            ctx.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvasEl.<span class="hljs-property">width</span>, canvasEl.<span class="hljs-property">height</span>)<br>        &#125;<br>    &#125;);<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(tap,<br>    <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;<br>        <span class="hljs-string">&quot;sidebar&quot;</span> !== e.<span class="hljs-property">target</span>.<span class="hljs-property">id</span> &amp;&amp; <span class="hljs-string">&quot;toggle-sidebar&quot;</span> !== e.<span class="hljs-property">target</span>.<span class="hljs-property">id</span> &amp;&amp; <span class="hljs-string">&quot;A&quot;</span> !== e.<span class="hljs-property">target</span>.<span class="hljs-property">nodeName</span> &amp;&amp; <span class="hljs-string">&quot;IMG&quot;</span> !== e.<span class="hljs-property">target</span>.<span class="hljs-property">nodeName</span> &amp;&amp; (render.<span class="hljs-title function_">play</span>(), <span class="hljs-title function_">updateCoords</span>(e), <span class="hljs-title function_">animateParticules</span>(pointerX, pointerY))<br>    &#125;,<br>    !<span class="hljs-number">1</span>),<br>    <span class="hljs-title function_">setCanvasSize</span>(),<br>    <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;resize&quot;</span>, setCanvasSize, !<span class="hljs-number">1</span>)<br>&#125;<br><span class="hljs-meta">&quot;use strict&quot;</span>;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">updateCoords</span>(<span class="hljs-params">e</span>) &#123;<br>    pointerX = (e.<span class="hljs-property">clientX</span> || e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientX</span>) - canvasEl.<span class="hljs-title function_">getBoundingClientRect</span>().<span class="hljs-property">left</span>,<br>    pointerY = e.<span class="hljs-property">clientY</span> || e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientY</span> - canvasEl.<span class="hljs-title function_">getBoundingClientRect</span>().<span class="hljs-property">top</span><br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">setParticuleDirection</span>(<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-keyword">var</span> t = anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>, <span class="hljs-number">360</span>) * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span> / <span class="hljs-number">180</span>,<br>    a = anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">50</span>, <span class="hljs-number">180</span>),<br>    n = [ - <span class="hljs-number">1</span>, <span class="hljs-number">1</span>][anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>)] * a;<br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-attr">x</span>: e.<span class="hljs-property">x</span> + n * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">cos</span>(t),<br>        <span class="hljs-attr">y</span>: e.<span class="hljs-property">y</span> + n * <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">sin</span>(t)<br>    &#125;<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createParticule</span>(<span class="hljs-params">e, t</span>) &#123;<br>    <span class="hljs-keyword">var</span> a = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> a.<span class="hljs-property">x</span> = e,<br>    a.<span class="hljs-property">y</span> = t,<br>    a.<span class="hljs-property">color</span> = colors[anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">0</span>, colors.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>)],<br>    a.<span class="hljs-property">radius</span> = anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">16</span>, <span class="hljs-number">32</span>),<br>    a.<span class="hljs-property">endPos</span> = <span class="hljs-title function_">setParticuleDirection</span>(a),<br>    a.<span class="hljs-property">draw</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        ctx.<span class="hljs-title function_">beginPath</span>(),<br>        ctx.<span class="hljs-title function_">arc</span>(a.<span class="hljs-property">x</span>, a.<span class="hljs-property">y</span>, a.<span class="hljs-property">radius</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>, !<span class="hljs-number">0</span>),<br>        ctx.<span class="hljs-property">fillStyle</span> = a.<span class="hljs-property">color</span>,<br>        ctx.<span class="hljs-title function_">fill</span>()<br>    &#125;,<br>    a<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createCircle</span>(<span class="hljs-params">e, t</span>) &#123;<br>    <span class="hljs-keyword">var</span> a = &#123;&#125;;<br>    <span class="hljs-keyword">return</span> a.<span class="hljs-property">x</span> = e,<br>    a.<span class="hljs-property">y</span> = t,<br>    a.<span class="hljs-property">color</span> = <span class="hljs-string">&quot;#F00&quot;</span>,<br>    a.<span class="hljs-property">radius</span> = <span class="hljs-number">0.1</span>,<br>    a.<span class="hljs-property">alpha</span> = <span class="hljs-number">0.5</span>,<br>    a.<span class="hljs-property">lineWidth</span> = <span class="hljs-number">6</span>,<br>    a.<span class="hljs-property">draw</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        ctx.<span class="hljs-property">globalAlpha</span> = a.<span class="hljs-property">alpha</span>,<br>        ctx.<span class="hljs-title function_">beginPath</span>(),<br>        ctx.<span class="hljs-title function_">arc</span>(a.<span class="hljs-property">x</span>, a.<span class="hljs-property">y</span>, a.<span class="hljs-property">radius</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>, !<span class="hljs-number">0</span>),<br>        ctx.<span class="hljs-property">lineWidth</span> = a.<span class="hljs-property">lineWidth</span>,<br>        ctx.<span class="hljs-property">strokeStyle</span> = a.<span class="hljs-property">color</span>,<br>        ctx.<span class="hljs-title function_">stroke</span>(),<br>        ctx.<span class="hljs-property">globalAlpha</span> = <span class="hljs-number">1</span><br>    &#125;,<br>    a<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">renderParticule</span>(<span class="hljs-params">e</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = <span class="hljs-number">0</span>; t &lt; e.<span class="hljs-property">animatables</span>.<span class="hljs-property">length</span>; t++) &#123;<br>        e.<span class="hljs-property">animatables</span>[t].<span class="hljs-property">target</span>.<span class="hljs-title function_">draw</span>()<br>    &#125;<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">animateParticules</span>(<span class="hljs-params">e, t</span>) &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> a = <span class="hljs-title function_">createCircle</span>(e, t), n = [], i = <span class="hljs-number">0</span>; i &lt; numberOfParticules; i++) &#123;<br>        n.<span class="hljs-title function_">push</span>(<span class="hljs-title function_">createParticule</span>(e, t))<br>    &#125;<br>    anime.<span class="hljs-title function_">timeline</span>().<span class="hljs-title function_">add</span>(&#123;<br>        <span class="hljs-attr">targets</span>: n,<br>        <span class="hljs-attr">x</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-keyword">return</span> e.<span class="hljs-property">endPos</span>.<span class="hljs-property">x</span><br>        &#125;,<br>        <span class="hljs-attr">y</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;<br>            <span class="hljs-keyword">return</span> e.<span class="hljs-property">endPos</span>.<span class="hljs-property">y</span><br>        &#125;,<br>        <span class="hljs-attr">radius</span>: <span class="hljs-number">0.1</span>,<br>        <span class="hljs-attr">duration</span>: anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">1200</span>, <span class="hljs-number">1800</span>),<br>        <span class="hljs-attr">easing</span>: <span class="hljs-string">&quot;easeOutExpo&quot;</span>,<br>        <span class="hljs-attr">update</span>: renderParticule<br>    &#125;).<span class="hljs-title function_">add</span>(&#123;<br>        <span class="hljs-attr">targets</span>: a,<br>        <span class="hljs-attr">radius</span>: anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">80</span>, <span class="hljs-number">160</span>),<br>        <span class="hljs-attr">lineWidth</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">alpha</span>: &#123;<br>            <span class="hljs-attr">value</span>: <span class="hljs-number">0</span>,<br>            <span class="hljs-attr">easing</span>: <span class="hljs-string">&quot;linear&quot;</span>,<br>            <span class="hljs-attr">duration</span>: anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">600</span>, <span class="hljs-number">800</span>)<br>        &#125;,<br>        <span class="hljs-attr">duration</span>: anime.<span class="hljs-title function_">random</span>(<span class="hljs-number">1200</span>, <span class="hljs-number">1800</span>),<br>        <span class="hljs-attr">easing</span>: <span class="hljs-string">&quot;easeOutExpo&quot;</span>,<br>        <span class="hljs-attr">update</span>: renderParticule,<br>        <span class="hljs-attr">offset</span>: <span class="hljs-number">0</span><br>    &#125;)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">debounce</span>(<span class="hljs-params">e, t</span>) &#123;<br>    <span class="hljs-keyword">var</span> a;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">var</span> n = <span class="hljs-variable language_">this</span>,<br>        i = <span class="hljs-variable language_">arguments</span>;<br>        <span class="hljs-built_in">clearTimeout</span>(a),<br>        a = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            e.<span class="hljs-title function_">apply</span>(n, i)<br>        &#125;,<br>        t)<br>    &#125;<br>&#125;<br><span class="hljs-keyword">var</span> canvasEl = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;.fireworks&quot;</span>);<br><span class="hljs-keyword">if</span> (canvasEl) &#123;<br>    <span class="hljs-keyword">var</span> ctx = canvasEl.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>),<br>    numberOfParticules = <span class="hljs-number">30</span>,<br>    pointerX = <span class="hljs-number">0</span>,<br>    pointerY = <span class="hljs-number">0</span>,<br>    tap = <span class="hljs-string">&quot;mousedown&quot;</span>,<br>    colors = [<span class="hljs-string">&quot;#FF1461&quot;</span>, <span class="hljs-string">&quot;#18FF92&quot;</span>, <span class="hljs-string">&quot;#5A87FF&quot;</span>, <span class="hljs-string">&quot;#FBF38C&quot;</span>],<br>    setCanvasSize = <span class="hljs-title function_">debounce</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        canvasEl.<span class="hljs-property">width</span> = <span class="hljs-number">2</span> * <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>,<br>        canvasEl.<span class="hljs-property">height</span> = <span class="hljs-number">2</span> * <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>,<br>        canvasEl.<span class="hljs-property">style</span>.<span class="hljs-property">width</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span> + <span class="hljs-string">&quot;px&quot;</span>,<br>        canvasEl.<span class="hljs-property">style</span>.<span class="hljs-property">height</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span> + <span class="hljs-string">&quot;px&quot;</span>,<br>        canvasEl.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>).<span class="hljs-title function_">scale</span>(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)<br>    &#125;,<br>    <span class="hljs-number">500</span>),<br>    render = <span class="hljs-title function_">anime</span>(&#123;<br>        <span class="hljs-attr">duration</span>: <span class="hljs-number">1</span> / <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">update</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>            ctx.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvasEl.<span class="hljs-property">width</span>, canvasEl.<span class="hljs-property">height</span>)<br>        &#125;<br>    &#125;);<br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(tap,<br>    <span class="hljs-keyword">function</span>(<span class="hljs-params">e</span>) &#123;<br>        <span class="hljs-string">&quot;sidebar&quot;</span> !== e.<span class="hljs-property">target</span>.<span class="hljs-property">id</span> &amp;&amp; <span class="hljs-string">&quot;toggle-sidebar&quot;</span> !== e.<span class="hljs-property">target</span>.<span class="hljs-property">id</span> &amp;&amp; <span class="hljs-string">&quot;A&quot;</span> !== e.<span class="hljs-property">target</span>.<span class="hljs-property">nodeName</span> &amp;&amp; <span class="hljs-string">&quot;IMG&quot;</span> !== e.<span class="hljs-property">target</span>.<span class="hljs-property">nodeName</span> &amp;&amp; (render.<span class="hljs-title function_">play</span>(), <span class="hljs-title function_">updateCoords</span>(e), <span class="hljs-title function_">animateParticules</span>(pointerX, pointerY))<br>    &#125;,<br>    !<span class="hljs-number">1</span>),<br>    <span class="hljs-title function_">setCanvasSize</span>(),<br>    <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;resize&quot;</span>, setCanvasSize, !<span class="hljs-number">1</span>)<br>&#125;;<br></code></pre></div></td></tr></table></figure><h4 id="修改-layout-swig-1"><a href="#修改-layout-swig-1" class="headerlink" title="修改_layout.swig"></a>修改_layout.swig</h4><p>同上</p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs JavaScript">&#123;% <span class="hljs-keyword">if</span> theme.<span class="hljs-property">fireworks</span> %&#125;<br>   &lt;canvas <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;fireworks&quot;</span> style=<span class="hljs-string">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;&lt;/canvas&gt; <br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span> <br>   <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/src/fireworks.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br>&#123;% endif %&#125;<br></code></pre></div></td></tr></table></figure><h4 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h4><p>路径<code>\themes\next\_config.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-comment"># Fireworks</span><br><span class="hljs-attr">fireworks:</span> <span class="hljs-literal">true</span><br></code></pre></div></td></tr></table></figure><h3 id="新建404界面"><a href="#新建404界面" class="headerlink" title="新建404界面"></a>新建404界面</h3><p>在站点根目录下,输入 <code>hexo new page 404</code> ,默认在 Hexo 站点下<code>/source/404/index.md</code><br>打开新建的<code>404界面</code>，在顶部插入一行，写上 <code>permalink: /404</code> ，这表示指定该页固定链接为 http://“主页”/404.html。</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-comment">#404 Not Found：该页无法显示</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2017-09-06 15:37:18</span><br><span class="hljs-attr">comments:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">permalink:</span> <span class="hljs-string">/404</span><br><span class="hljs-meta">---</span><br></code></pre></div></td></tr></table></figure><p>如果你不想编辑属于自己的404界面,可以显示腾讯公益404界面,代码如下：</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">HTML</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;content-type&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;text/html;charset=utf-8;&quot;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge,chrome=1&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;robots&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;all&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;robots&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;index,follow&quot;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://qzone.qq.com/gy/404/style/404style.css&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/plain&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://www.qq.com/404/search_children.js&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> <span class="hljs-attr">homePageUrl</span>=<span class="hljs-string">&quot;/&quot;</span></span><br><span class="hljs-tag">          <span class="hljs-attr">homePageName</span>=<span class="hljs-string">&quot;回到我的主页&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://qzone.qq.com/gy/404/data.js&quot;</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://qzone.qq.com/gy/404/page.js&quot;</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="内容自适应"><a href="#内容自适应" class="headerlink" title="内容自适应"></a>内容自适应</h3><blockquote><p>在<code>Gemini</code>主题中没有进行配置</p></blockquote><figure class="highlight styl"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs styl"><span class="hljs-comment">// 修改成你期望的宽度</span><br><span class="hljs-variable">$content</span>-desktop = <span class="hljs-number">920px</span><br><br><span class="hljs-comment">// 当视窗超过 1600px 后的宽度</span><br><span class="hljs-variable">$content</span>-desktop-large = <span class="hljs-number">920px</span><br></code></pre></div></td></tr></table></figure><blockquote><p>700px，当屏幕宽度 &lt; 1600px<br>900px，当屏幕宽度 &gt;= 1600px<br>移动设备下，宽度自适应</p></blockquote><h3 id="提升加载速度"><a href="#提升加载速度" class="headerlink" title="提升加载速度"></a>提升加载速度</h3><blockquote><p>好像在最新的配置中没用上</p></blockquote><p>主题的配置文件<code>_config.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yml"><span class="hljs-comment"># Internal version: 1.2.1</span><br><span class="hljs-comment"># See: http://VelocityJS.org</span><br><span class="hljs-attr">velocity:</span> <span class="hljs-comment">#//cdn.jsdelivr.net/velocity/1.2.3/velocity.min.js</span><br><br><br><span class="hljs-comment"># Internal version: 4.6.2</span><br><span class="hljs-comment"># See: http://fontawesome.io/</span><br><span class="hljs-attr">fontawesome:</span> <span class="hljs-comment">#//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>NexT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用GitHub和Hexo搭建自己的博客</title>
    <link href="/2018/08/06/001.Blog-build-your-own-blog-with-GitHub-and-Hexo/"/>
    <url>/2018/08/06/001.Blog-build-your-own-blog-with-GitHub-and-Hexo/</url>
    
    <content type="html"><![CDATA[<p>我这里选用的是GitHub.io以及Hexo来搭建自己的博客的</p><h3 id="配置必备"><a href="#配置必备" class="headerlink" title="配置必备"></a>配置必备</h3><blockquote><p><a href="https://git-scm.com/downloads">git</a><br><a href="http://nodejs.cn/download/">node.js</a></p></blockquote><h4 id="git的安装"><a href="#git的安装" class="headerlink" title="git的安装"></a>git的安装</h4><blockquote><p>Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。<br>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。<br>Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持</p></blockquote><p>无需多讲，一路默认 </p><h4 id="node-js的安装"><a href="#node-js的安装" class="headerlink" title="node.js的安装"></a>node.js的安装</h4><blockquote><p>简单的说 Node.js 就是运行在服务端的 JavaScript。<br>Node.js 是一个基于Chrome JavaScript 运行时建立的一个平台。<br>Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。</p></blockquote><p>操作空间不大，一路默认</p><h3 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h3><h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><p>进入命令行 输入命令</p><div class="hljs code-wrapper"><pre><code>npm install -g hexo</code></pre></div><p>顺便把这个也安装一下 自动部署发布工具</p><div class="hljs code-wrapper"><pre><code>  npm install hexo-deployer-git  --save</code></pre></div><h4 id="初始化-Hexo"><a href="#初始化-Hexo" class="headerlink" title="初始化 Hexo"></a>初始化 Hexo</h4><p>选择你博客存放的位置 (建议创建一个新的文件夹_初始化需要一个空的文件夹)<br>然后命令行输入命令</p><div class="hljs code-wrapper"><pre><code>hexo init</code></pre></div><h4 id="git主题"><a href="#git主题" class="headerlink" title="git主题"></a>git主题</h4><p>本身自带主题 可以暂时跳过该操作 若需要更换主题时再进行操作</p><blockquote><p>此处以我使用的主题为例<br>进入你的 <strong>themes</strong>目录 命令行输入命令</p></blockquote><div class="hljs code-wrapper"><pre><code>git clone https://github.com/iissnan/hexo-theme-next.git</code></pre></div><blockquote><p>主题下载后需要进行以下操作才能更换<br>根目录下的 <strong>_config.yml</strong><br>修改 xxxxx为你的主题名 ps.注意有空格<br>themes: XXXXX</p></blockquote><h4 id="本地浏览博客"><a href="#本地浏览博客" class="headerlink" title="本地浏览博客"></a>本地浏览博客</h4><p>命令行输入命令</p><figure class="highlight ebnf"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo s</span><br></code></pre></div></td></tr></table></figure><blockquote><p>hexo g 生成<br>hexo s 启动服务预览</p></blockquote><blockquote><p>在浏览器输入：<strong>localhost:4000</strong> 就可以进行访问<br>Ctrl+C 即可退出</p></blockquote><h4 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h4><p>根目录下命令行 输入命令</p><figure class="highlight actionscript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs actionscript">hexo <span class="hljs-keyword">new</span> <span class="hljs-string">&#x27;文章名字&#x27;</span><br></code></pre></div></td></tr></table></figure><blockquote><p>在source目下的 <strong>_posts</strong>目录下 会出现 <strong>.md</strong>文件以下为一般完整内容</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs \---">title: postName #文章页面上的显示名称，一般是中文<br>date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改<br>categories: 默认分类 #分类<br>tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格<br>description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面<br>---<br>以下文章是正文<br></code></pre></div></td></tr></table></figure><h4 id="上传到GitHub上"><a href="#上传到GitHub上" class="headerlink" title="上传到GitHub上"></a>上传到GitHub上</h4><blockquote><p>首先你得有GitHub账号<br>然后你创建了一个仓库为 <strong>用户名.gitHub.io</strong><br>ssh密钥自己配好</p></blockquote><blockquote><p>根目录下 <strong>_config.yml</strong>文件内<br>把你的git写进去 现在写的是我的 替换一下就ok了</p></blockquote><figure class="highlight dts"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> git@github.com:MoBenw/MoBenw.github.io.git<br></code></pre></div></td></tr></table></figure><p>满足以上条件<br>命令行 输入命令</p><div class="hljs code-wrapper"><pre><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></pre></div><blockquote><p>hexo clean 清理缓存<br>hexo g 生成<br>hexo d 部署</p></blockquote><h4 id="使用你的GitHub-io访问"><a href="#使用你的GitHub-io访问" class="headerlink" title="使用你的GitHub.io访问"></a>使用你的GitHub.io访问</h4><p>到这里你就基本上会基本的GitHub上Hexo的博客搭建了 (感觉语句不通 不管了)</p><h3 id="有关于README-md"><a href="#有关于README-md" class="headerlink" title="有关于README.md"></a>有关于README.md</h3><blockquote><p>在 <strong>source</strong>目录下 创建一个 <strong>README.md</strong> 文件 里面是你要写的内容<br>进入根目录 打开配置文件 <strong>_config.yml</strong><br>修改 跳过渲染内容<br>skip_render: README.md</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Hexo博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>NexT</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
